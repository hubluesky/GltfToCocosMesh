import parseGLB from './Glb';
import Accessor from './Accessor';
import { Mesh, Primitive } from './Mesh';
import { Skin, SkinJoint } from './Skin';
import { Animation, Track, ETransform, ELerp } from './Animation';
import { Texture } from './Texture';
import { Pose } from './Pose';
declare class Gltf2Parser {
    json: any;
    bin: ArrayBuffer;
    constructor(json: any, bin?: ArrayBuffer | null);
    private getNodeByName;
    getMeshNames(): Array<string>;
    private getMeshByName;
    private getMeshNodes;
    getMesh(id: string | number | undefined): Mesh | null;
    getSkinNames(): Array<string>;
    private getSkinByName;
    getSkin(id: string | number | undefined): Skin | null;
    getMaterial(id: number | undefined): any;
    getTexture(id: number): Texture | null;
    getAnimationNames(): Array<string>;
    private getAnimationByName;
    getAnimation(id: string | number | undefined): Animation | null;
    private getPoseByName;
    getPose(id?: string): Pose | null;
    parseAccessor(accID: number): Accessor | null;
    static fetch(url: string): Promise<Gltf2Parser | null>;
}
export default Gltf2Parser;
export { parseGLB, Accessor, Texture, Pose, Mesh, Primitive, Skin, SkinJoint, Animation, Track, ETransform, ELerp, };
